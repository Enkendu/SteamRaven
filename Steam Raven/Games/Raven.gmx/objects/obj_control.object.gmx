<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_track</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3600</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
pausable = 0; //This object can't be paused.
globalvar background_music,pause; //Sets a global variable for the background music and the pause state.
        pause = 0;


/*This will set and play the background music. You can also put this in the room creation code
if you want a different music to play for each level*/
background_music = snd_track;
sound_volume(background_music,1);
sound_loop(background_music);

global.endOfLevel = false;



// Menu testing
//This block of code does a few things:
//First, it initializes a one-dimensional array called menu_options. 
//Second, we initialize a variable called selector. This shows which item is selected. 
//Currently, 'Start' will be selected as the selector is equal to one, and menu_options[1] is 'Start'.

//menu_options[1] = "Start";
//menu_options[2] = "Options";
//menu_options[3] = "Load Game";
//menu_options[4] = "End Game";

//selector = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_boss1</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if background_vtiled[0] = true
    {
    background_vspeed[0] = 0;
    }
    
    global.endOfLevel = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
// Pause Game
if ( !pause )
{
    if ( keyboard_check_pressed(vk_control) ) //Pauses the game when the player press Enter.
    {
        pause=1; //The game is paused.
        sound_volume(background_music,0.85); //Reduces the volume of the background music (optional).
        //sound_play(snd_pause); //Plays a sound when the game is paused (optional).
        //instance_create(view_xview+view_wview/2,view_yview+view_hview/2,obj_pause); //Creates an object to display a pause sprite when the game is paused (optional).
        with ( all ) //Saves the state of all "pausable" instances and put all their local variable to 0.
        {
            if ( pausable )
            {
                prev_image_speed=image_speed;
                prev_vspeed=vspeed;
                prev_hspeed=hspeed;
                prev_gravity=gravity;
                prev_path_speed=path_speed;
                prev_timeline_speed=timeline_speed;
                image_speed=0;
                vspeed=0;
                hspeed=0;
                gravity=0;
                path_speed=0;
                timeline_speed=0;

                if background_vtiled[0] = true
                {
                    background_vspeed[0] = 0;
                }
            }
        }
        
        
//Etc...
        //menuscreen = instance_create(x, y, obj_menu);
        //menuscreen = instance_create(x, y, obj_menu);
    }
}
else if ( keyboard_check_pressed(vk_control) ) //Resume the game when the player press Enter.
{
    pause=0; //The game resumes.
    sound_volume(background_music,1); //Music volume is back to normal.
    //with (obj_pause) instance_destroy(); //Destroys the pause object.
    with ( all ) //Restore the state of all instances.
    {
        if ( pausable )
        {
            image_speed=prev_image_speed;
            vspeed=prev_vspeed;
            hspeed=prev_hspeed;
            gravity=prev_gravity;
            path_speed=prev_path_speed;
            timeline_speed=prev_timeline_speed;

            if background_vtiled[0] = true
            {
                background_vspeed[0] = 1;
            }
        }
    }
    
    //menuscreen = instance_destroy();
}

if ( pause )
{
    with ( all ) //Maintains all the alarms of "pausable" objects to the same value while the game is paused.
    {
        if ( pausable )
        {
            if (alarm[0]&gt;0) alarm[0]+=1;
            if (alarm[1]&gt;0) alarm[1]+=1;
            if (alarm[2]&gt;0) alarm[2]+=1;
            if (alarm[3]&gt;0) alarm[3]+=1;
            if (alarm[4]&gt;0) alarm[4]+=1;
            if (alarm[5]&gt;0) alarm[5]+=1;
            if (alarm[6]&gt;0) alarm[6]+=1;
            if (alarm[7]&gt;0) alarm[7]+=1;
            if (alarm[8]&gt;0) alarm[8]+=1;
            if (alarm[9]&gt;0) alarm[9]+=1;
            if (alarm[10]&gt;0) alarm[10]+=1;
            if (alarm[11]&gt;0) alarm[11]+=1;
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for( i=1; i&lt;=4; i+=1)
//{
//draw_text( 300, 25 * i + 200, menu_options[i] );
//}

//draw_text(280, 25 * selector + 200, "&gt;" );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID=m_create(5,5)
m_option(ID,'Test1')
m_option(ID,'Test2')
m_option(ID,'Test3')
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
