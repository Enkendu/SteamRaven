<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( pause ) exit; //Put this before any other code.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Test Pause code
pausable = 1; // 0 can't be paused, 1 can be paused.
// ---------------

outline = draw_rectangle_color(0, room_height - 32, room_width, room_height, c_white, c_white, c_white, c_white, true);
inside = draw_rectangle_color(1, room_height - 31, room_width - 1, room_height - 1, c_black, c_black, c_black, c_black, false);

draw_healthbar(5, room_height - 34, 25, room_height - 84, (obj_player.hp / 10) * 100, c_black, c_red, c_lime, 2, true, true);
draw_set_halign(fa_left);
draw_text_color(5, room_height - 30, "Health", c_white, c_white, c_white, c_white, 255);

draw_set_halign(fa_left);
draw_text_color(5, room_height - 15, "Score: ", c_white, c_white, c_white, c_white, 255);
draw_text_color(100, room_height - 15, score, c_white, c_white, c_white, c_white, 255);

//draw_healthbar(35, room_height - 26, 55, room_height - 21, (obj_player.powerup_ammo / 100) * 100, c_black, c_red, c_lime, 0, true, true);


// Power Up Ammo on right side
draw_set_halign(fa_right);
draw_text_color(room_width - 5, room_height - 30, "Power Up Ammo", c_white, c_white, c_white, c_white, 255);
draw_text_color(room_width - 50, room_height - 15, obj_player.powerup_ammo, c_white, c_white, c_white, c_white, 255);
draw_text_color(room_width - 5, room_height - 15, "/100", c_white, c_white, c_white, c_white, 255);





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
