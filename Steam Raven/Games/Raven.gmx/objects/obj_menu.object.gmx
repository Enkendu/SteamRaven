<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>amount=0
slot[amount]=0


//This block of code does a few things:
//First, it initializes a one-dimensional array called menu_options. 
//Second, we initialize a variable called selector. This shows which item is selected. 
//Currently, 'Start' will be selected as the selector is equal to one, and menu_options[1] is 'Start'.

//menu_options[1] = "Start";
//menu_options[2] = "Options";
//menu_options[3] = "Load Game";
//menu_options[4] = "End Game";

//selector = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This piece of code does 3 main things every step: Check whether the Up arrow key is pressed, whether the Down arrow key is pressed, and whether Enter is pressed. If any of these functions returns true, then the next block is executed. If the up key is pressed, the selector is set to relative value -1 (1 is subtracted from the current value), if it is not the first option on the list. If the down key is pressed, the selector is set to relative value +1 (1 is added to the current value), as long as it is not the last option on the list. If enter is pressed, it selects the current option.

//if keyboard_check_released(vk_up)
//     {if (selector&gt;1) selector-=1}
//if keyboard_check_released(vk_down)
//     {if (selector&lt;4) selector+=1}
//if keyboard_check_released(vk_enter)
//     {if selector=1 then room_goto(rm_level1)
//      if selector=2 then room_goto(rm_level1)
//      //if selector=3 then game_load('save')
//      if selector=4 then game_end()}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Don't remoce this code - it draws the menu!
wide=0
width[0]=0
maxwide=0
for(i=1;i&lt;=amount;i+=1) {
    wide+=1
    width[wide]=string_width(slot[i])
    if width[wide]&gt;maxwide {
        maxwide=width[wide]
    }
}
draw_set_color(c_white)
draw_rectangle(x-2,y+14,x+maxwide+2,y+16*amount+16,false)
draw_set_color(c_black)
draw_rectangle(x-2,y+14,x+maxwide+2,y+16*amount+16,true)
draw_set_font(fnMenu)
for(i=1;i&lt;=amount;i+=1) {
    draw_text(x,y+16*i,slot[i])
}

//for( i=1; i&lt;=4; i+=1)
//{
//draw_text( 300, 25 * i + 200, menu_options[i] );
//}

//draw_text(280, 25 * selector + 200, "&gt;" );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
