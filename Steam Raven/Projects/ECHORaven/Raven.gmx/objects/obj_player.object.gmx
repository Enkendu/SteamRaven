<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_base</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Test Pause code
//pausable = 1; // 0 can't be paused, 1 can be paused.
// ---------------


hp = 10;
bulletspeed = 1;
powerup_ammo = 100;

image_speed = 0;
image_index = 0;

friction = 0.2;

instance_create(x, y, obj_electrocontacts);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (global.shipModel)
    {
        case 1:
            bullet1 = instance_create(x, y-16, obj_bullet);
            bullet1.direction = 90;

            bulletL = instance_create(x - 15, y-16, obj_bullet);
            bulletL.direction = 90;
            
            bulletR = instance_create(x + 15, y-16, obj_bullet);
            bulletR.direction = 90;

            if (bulletspeed &gt; 1)
            {
                powerup_ammo -= 1;
            }

            if (powerup_ammo == 0)
            {
                bulletspeed = 1;
            }
            break;
        case 2:
        
        case 3:
        
        case 4:
            bullet1 = instance_create(x, y-16, obj_bullet);
            bullet1.direction = 90;
            
            bulletL = instance_create(x - 7, y-16, obj_bullet);
            bulletL.direction = 90;
            
            bulletR = instance_create(x + 7, y-16, obj_bullet);
            bulletR.direction = 90;

            if (bulletspeed &gt; 1)
            {
                powerup_ammo -= 1;
            }

            if (powerup_ammo == 0)
            {
                bulletspeed = 1;
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Keep the electro contacts aligned with the player
obj_electrocontacts.x = x;
obj_electrocontacts.y = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if ( pause ) exit; //Put this before any other code.

// Check keyboard controls
if (keyboard_check(vk_left) or keyboard_check(ord("A")))
{
hspeed -= 1;
}
if (keyboard_check(vk_right) or keyboard_check(ord("D")))
{
hspeed += 1;
}
if (keyboard_check(vk_up) or keyboard_check(ord("W")))
{
vspeed -= 1;
}
if (keyboard_check(vk_down) or keyboard_check(ord("S")))
{
vspeed += 1;

}

// If they are pressing fire we need to trigger the alarm to govern the emitting lasers
if (keyboard_check(vk_space))
{
    // The default speed will be 20 and will lower with powerups
    if (alarm[0] == -1) alarm[0] = 20 / bulletspeed;
}

// Do not let the player exceed a specific speed, in this case 6
if (hp &lt; 7 and hp &gt; 2)
    {
        if (speed &gt; 4) speed = 4;
    }
    
    if (hp &lt; 3)
    {
        if (speed &gt; 2) speed = 2;
    }
    
    if (hp &gt; 6)
    {
        if (speed &gt; 6) speed = 6;
    }

// Do not let the player go out of the left and right bounds of the map
x = min(x, room_width - 16);
x = max(x, 16);

// Do not let the player go out of the top and bottom bounds of the map
y = min(y, room_height - 48);
//y = max(y, (room_height / 4) - 16);
y = max(y, 16);

// Stop the game if the hp of the player reaches zero
if (hp &lt;= 0)
{
    if (alarm[6] == -1)
    {
        alarm[6] = 60;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Player base
tl5 = draw_sprite(spr_player_base, image_index, x, y+4);

// Upgrade
tl5 = draw_sprite(spr_upgrade4, image_index, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
